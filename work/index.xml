<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Works on YJMBC Blog</title>
    <link>https://yjmbc.github.io/work/</link>
    <description>Recent content in Works on YJMBC Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 06 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://yjmbc.github.io/work/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vue3 自定义指令 点击空白处隐藏</title>
      <link>https://yjmbc.github.io/work/vue3-directive-clickoutside/</link>
      <pubDate>Fri, 06 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://yjmbc.github.io/work/vue3-directive-clickoutside/</guid>
      <description>注册：&#xA;// main.js import directives from &amp;#34;./util/directives&amp;#34;; const app = createApp(App); app.use(router).use(store).use(directives).mount(&amp;#34;#app&amp;#34;); 使用：&#xA;&amp;lt;div v-clickOutSide=&amp;#34;{ callback: () =&amp;gt; (showModal = false), except: [&amp;#39;.showModalButton&amp;#39;], }&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; 指令：&#xA;// derectives.js // 自定义指令点击非自身事件（空白处） // 使用的时候需要传递 对象 // { // callback: 点击的时候回调的函数, // except: [&amp;#39;&amp;#39;,&amp;#39;&amp;#39;] 里面传递选择器，表示点击这里的时候不用理会 // } const clickOutSide = { created(el, binding) { function documentHandler(e) { // 如果点击的是元素自己或者在排除的元素里面则不触发回调函数 if ( el.contains(e.target) || binding.value.except.some( (item) =&amp;gt; document.querySelector(item) &amp;amp;&amp;amp; document.querySelector(item).contains(e.target) ) ) return false; if (binding.</description>
    </item>
    <item>
      <title>编译和反编译</title>
      <link>https://yjmbc.github.io/work/asar/</link>
      <pubDate>Mon, 15 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://yjmbc.github.io/work/asar/</guid>
      <description>electron 项目安装之后，目录结构里有一个 resources 文件夹，文件夹里面有一个 app.asar 文件，这个文件相当于打包好了以后的 electron 项目的压缩文件。 下载 @electron/asar 包之后，进入 resources 文件夹下 asar extract app.asar ./app 这个命令会还原 项目打包之后的样子 然后理论上修改这个压缩包里的内容，再通过编译会 app.asar 文件，就可以实现对项目的更改 asar pack ./app app.asar 但是出于安全起见，打包的时候可以给文件加上签名，有了签名之后修改项目里的内容，都会导致签名失效。</description>
    </item>
    <item>
      <title>拖拽实现记录</title>
      <link>https://yjmbc.github.io/work/drag/</link>
      <pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://yjmbc.github.io/work/drag/</guid>
      <description>一 反馈按钮 1 使用 drag event 来实现 主要思路： dragstart 的时候设置定时器隐藏原本的按钮 不然隐藏之后无法触发 dragstart 事件 drag 期间修改鼠标的样式，原本默认是 copy 的鼠标样式 dragend 的时候获取鼠标的位置，设置 style.top ，定时器恢复按钮的显示&#xA;实践发现，完全使用 drag event 不用针对点击事件进行额外的处理，拖拽流程也很流畅，但是如果不采用全屏都是可拖拽区域的写法，拖拽的时候会出现明显的回弹，为了避免回弹，使用全屏都是可拖拽区域的方法，又会导致鼠标的 copy 样式无法完全隐藏，（可以隐藏，但是偶尔太快拖动的时候会出现）这个问题在拖拽库中也可以观察到，例如: http://alloyteam.github.io/AlloyFinger/ 所以出于这一点的原因不采用 drag event 来实现&#xA;2 使用 mouse event 来实现 主要思路： 仿造 touch 事件来完成（ 这里的距离计算和下面vconsole中的计算方式是一样的 ） mousedown 的时候 记录鼠标的初始位置坐标 同时在 document 上重写 mouseup mousemove 事件&#xA;button.onmousedown = (e) =&amp;gt; { e.preventDefault(); // 记录鼠标点下去的开始位置 button.setAttribute(&amp;#39;startX&amp;#39;, `${e.clientX || 0}`); button.setAttribute(&amp;#39;startY&amp;#39;, `${e.clientY || 0}`); // 同时修改 mouseup mousemove 事件 document.</description>
    </item>
    <item>
      <title>hugo 实践记录</title>
      <link>https://yjmbc.github.io/work/hugo-start/</link>
      <pubDate>Fri, 14 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://yjmbc.github.io/work/hugo-start/</guid>
      <description>安装 https://gohugo.io/installation/windows/直接用 scoop 安装最方便 go 安装msi文件运行就可以了&#xA;新建 hugo new site [网站名字]&#xA;挑选一个主题 https://themes.gohugo.io/&#xA;git submodule add [主题的github地址]&#xA;在 hugo.toml 里面定义主题 theme = &#39;主题名字&#39;&#xA;hugo server 启动&#xA;hugo server -D 预览&#xA;新建文章 hugo new content posts/my-first-post.md&#xA;hugo 打包文件 会放到 public 目录下面&#xA;github page 创建一个仓库 命名 username.github.io 然后把远程仓库拉到本地 git clone 远程仓库 把上面 public 目录下的所有文件复制过来 提交 推送远程仓库 访问 username.github.io hugo.toml 文件 # 设置默认语言为简体中文 defaultContentLanguage = &amp;#39;zh-cn&amp;#39; # 要注意配置文件的 url 要更改成github page的路径！！！ baseURL = &amp;#39;https://yjmbc.</description>
    </item>
  </channel>
</rss>
